<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>seanchann</title>
    <link>https://blog.ucatch.me/</link>
    <description>Recent content on seanchann</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <managingEditor>seanchann@foxmail.com (seanchann.zhou)</managingEditor>
    <webMaster>seanchann@foxmail.com (seanchann.zhou)</webMaster>
    <lastBuildDate>Sun, 17 Sep 2017 10:57:02 +0000</lastBuildDate>
    
	<atom:link href="https://blog.ucatch.me/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Classes VS Interfaces</title>
      <link>https://blog.ucatch.me/post/typescript/classesvsinterfaces/</link>
      <pubDate>Sun, 17 Sep 2017 10:57:02 +0000</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/typescript/classesvsinterfaces/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://jameshenry.blog/typescript-classes-vs-interfaces/&#34;&gt;本文原文地址&lt;/a&gt;，翻译如有问题请指正&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;我们现在已经可以在JavaScript中使用类了，在TypeScript中类早已经支持了。但是在TypeScript中我们有一个&lt;code&gt;interface&lt;/code&gt;的概念，那么当我们添加&lt;code&gt;type annotations&lt;/code&gt;的时候，经常会有疑问：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;这个&lt;code&gt;type annotations&lt;/code&gt;应该使用&lt;code&gt;interface&lt;/code&gt;还是&lt;code&gt;class&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;本文将会对比1&lt;code&gt;TypeScript&lt;/code&gt;中的&lt;code&gt;classes&lt;/code&gt;和&lt;code&gt;interfaces&lt;/code&gt;的区别，来解答这个问题。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cmake exporting and importing target</title>
      <link>https://blog.ucatch.me/post/build-system/cmake-exporting-importing-target/</link>
      <pubDate>Wed, 30 Aug 2017 16:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/build-system/cmake-exporting-importing-target/</guid>
      <description>&lt;p&gt;使用&lt;code&gt;cmake&lt;/code&gt;编译生成的库或者可执行程序，我们都称为&lt;code&gt;target&lt;/code&gt;。如果其他的工程中想使用这些&lt;code&gt;target&lt;/code&gt;的话，就需要本文所描述的技术，来将&lt;code&gt;target&lt;/code&gt;导出，然后在其他的工程的cmake中再导入使用。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cmake 路径检索</title>
      <link>https://blog.ucatch.me/post/build-system/cmake-path/</link>
      <pubDate>Fri, 18 Aug 2017 08:36:48 +0000</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/build-system/cmake-path/</guid>
      <description>&lt;p&gt;在实际的开发过程中，经常需要配置库的检索路径，头文件的检索路径，工程的&lt;code&gt;*Config.cmake&lt;/code&gt;检索路径，自定义的&lt;code&gt;FindProject.cmake&lt;/code&gt;路径等等。因此，cmake的路径检索以及优先级策略等等，都是编写cmake工程文件所必需的知识，本文整理了cmake的路径检索知识，希望对大家有所帮助。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cmake编译第三方依赖工程</title>
      <link>https://blog.ucatch.me/post/build-system/cmake-external-project/</link>
      <pubDate>Thu, 18 Aug 2016 08:36:48 +0000</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/build-system/cmake-external-project/</guid>
      <description>&lt;p&gt;在&lt;code&gt;cmake&lt;/code&gt;的工程中，存在大量的使用或者引用外部工程的情形，很多时候，我们并不想直接导入外部代码到我们的工程里。这个时候，在我们的工程里，直接编译外部工程，然后输出工程所依赖文件，无疑是最好的方法。&lt;/p&gt;

&lt;p&gt;本文主要阐述在&lt;code&gt;cmake&lt;/code&gt;工程中如何编译外部工程。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitlab的安装</title>
      <link>https://blog.ucatch.me/post/scm/gitlab-install/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0000</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/scm/gitlab-install/</guid>
      <description>&lt;p&gt;gitlab是开源领域比较著名的git仓库管理平台，支持各种git特性、项目管理集成度高、定期备份、CI/CD Piplines等等功能，这些都能有效提升项目管理效率，让开发人员之间的协作更加的顺畅。&lt;/p&gt;

&lt;p&gt;本文主要就是基于docker来构建我们的gitlab环境，方便数据的迁移以及gitlab的升级。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>redmine的安装</title>
      <link>https://blog.ucatch.me/post/scm/redmine-install/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0000</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/scm/redmine-install/</guid>
      <description>&lt;p&gt;本文主要就是基于docker来构建我们的redmine环境，方便数据的迁移以及redmine的升级。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb index说明</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-index/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-index/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mongo 的索引可以加快数据的查询，并且可以有效的避免重复键值对。&lt;/p&gt;

&lt;h2 id=&#34;mongo的索引类型&#34;&gt;mongo的索引类型&lt;/h2&gt;

&lt;p&gt;MongoDB提供了不同类型的indexes，这些indexes针对不同的目的以及各种不同类型的内容。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb 写操作</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-wirte/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-wirte/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mongodb与写操作相关的内容，比如insert、update、delete操作&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb安装说明</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-install/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-install/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;本文的安装是采用docker的方式，而不是在os上安装package的方式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.mongoing.com/manual/tutorial/&#34;&gt;package的安装方式&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在开始前，假定用户已经完成了基础环境的配置，这里主要是指docker的运行环境&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb客户端并发 --- Golang</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-go-concurrently/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-go-concurrently/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.mongodb.org/post/80579086742/running-mongodb-queries-concurrently-with-go&#34;&gt;&lt;code&gt;原文的地址&lt;/code&gt;&lt;/a&gt;, pla，pla的一堆作者的铺垫介绍略过，但是还是感谢下作者。&lt;/p&gt;

&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;

&lt;p&gt;mongodb支持很多不同的编程语言，感谢编写驱动程序的人员。一个mongoDB的go语言的驱动叫做mgo。这个驱动是由Gustavo Niemeyer和一些的MongoDB公司的同事一起开发的。团队的负责人是Gustavo以及Steve Francia，他们在2014年的“GopherCon”上分享了“使用Go语言在mongodb中存储数据”。分享内容描述了mgo驱动如何使得mongodb和go更好的协同工作去构建高度可扩展的软件。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb的命令</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-shell-cmd/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-shell-cmd/</guid>
      <description>&lt;p&gt;本文主要汇总mongodb的命令行。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongo shell版本：3.0.4&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb的用户管理说明</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-user/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-user/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;安装工作完成后，整个的mongodb运行起来后，在开始工作前，首先应该为我们的mongodb配置适当的用户以及其权限。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb的读说明</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-read/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-read/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mongodb与读操作相关的内容，比如find以及query操作&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mongodb问题汇总</title>
      <link>https://blog.ucatch.me/post/mongodb/mongodb-problems-summary/</link>
      <pubDate>Sun, 31 Jul 2016 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/mongodb/mongodb-problems-summary/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb版本： 3.0.2&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;warning-sys-kernel-mm-transparent-hugepage-enabled-or-sys-kernel-mm-transparent-hugepage-defrag-is-always&#34;&gt;WARNING:/sys/kernel/mm/transparent_hugepage/enabled or /sys/kernel/mm/transparent_hugepage/defrag is &amp;lsquo;always&amp;rsquo;.&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-text&#34;&gt;    这个问题的原因是由于内核的某些参数的配置造成的mongodb产生了警告，基于docker环境，在docker运行的host主机上：

    1. echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/enabled
    2. echo never &amp;gt; /sys/kernel/mm/transparent_hugepage/defrag

    or

    1. echo never | sudo tee /sys/kernel/mm/transparent_hugepage/enabled
    2. echo never | sudo tee /sys/kernel/mm/transparent_hugepage/defrag
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reflect</title>
      <link>https://blog.ucatch.me/post/golang/reflect/</link>
      <pubDate>Sat, 31 Oct 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/golang/reflect/</guid>
      <description>&lt;p&gt;reflect 在golang的开发中，经常会使用到的一个特性，它使golang具有了某些动态语言的特性。本文直接翻译自&lt;a href=&#34;(http://blog.golang.org/laws-of-reflection)&#34;&gt;&lt;code&gt;官方网站&lt;/code&gt;&lt;/a&gt;，对&lt;code&gt;reflect&lt;/code&gt;的三条规则进行阐述。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkins与gitlab的整合</title>
      <link>https://blog.ucatch.me/post/ci-cd/jenkins-gitlab/</link>
      <pubDate>Tue, 31 Mar 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/ci-cd/jenkins-gitlab/</guid>
      <description>&lt;p&gt;本文主要针对jenkins与gitlab的整合进行说明。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins: ver. 1.609.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;gitlab: 6.8.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkins使用问题汇总</title>
      <link>https://blog.ucatch.me/post/ci-cd/jenkins-problem/</link>
      <pubDate>Tue, 31 Mar 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/ci-cd/jenkins-problem/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins: ver. 1.609.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;jenkins在使用中碰到的问题的汇总，以备查阅。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkins的docker编译</title>
      <link>https://blog.ucatch.me/post/ci-cd/jenkins-docker-build/</link>
      <pubDate>Tue, 31 Mar 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/ci-cd/jenkins-docker-build/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins: ver. 1.609.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;前提条件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jenkins的任意node已经安装docker或者docker-build-step插件已经安装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkins的docker节点配置</title>
      <link>https://blog.ucatch.me/post/ci-cd/jenkins-docker-slave/</link>
      <pubDate>Tue, 31 Mar 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/ci-cd/jenkins-docker-slave/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins：ver. 1.609.1&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;../../ci-cd/jenkins-gitlab&#34;&gt;前面的章节已经成功的通过git push触发job&lt;/a&gt;，本章我们配置一个job，在docker cloud中执行这些job&lt;/p&gt;

&lt;p&gt;前提条件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jenkins的docker-plugin插件已经安装&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkins的安装说明</title>
      <link>https://blog.ucatch.me/post/ci-cd/jenkins-install/</link>
      <pubDate>Tue, 31 Mar 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/ci-cd/jenkins-install/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins: ver. 1.609.1&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;安装&#34;&gt;安装&lt;/h2&gt;

&lt;p&gt;对于jenkins的安装，直接使用dockerhub上的镜像进行构建。直接docker pull jenkins就可以了。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jenkins的访问权限以及账户安全</title>
      <link>https://blog.ucatch.me/post/ci-cd/jenkins-security/</link>
      <pubDate>Tue, 31 Mar 2015 08:49:41 +0800</pubDate>
      <author>seanchann@foxmail.com (seanchann.zhou)</author>
      <guid>https://blog.ucatch.me/post/ci-cd/jenkins-security/</guid>
      <description>&lt;p&gt;&lt;strong&gt;系统：CentOS7 + docker 1.6&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Jenkins: ver. 1.609.1&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&#34;配置说明&#34;&gt;配置说明&lt;/h2&gt;

&lt;p&gt;jenkins的安全配置说明在主页面的Configure Global Security的菜单中。它的安全和访问控制主要是两部分：安全域和鉴权策略。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>